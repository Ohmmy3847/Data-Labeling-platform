'use client';

import { useState } from 'react';
import { ArrowLeft } from 'lucide-react';
import { useRouter } from 'next/navigation';
import { gradients, components, typography } from '@/styles/designSystem';
import { TASK_CONFIGS } from '@/config/taskConfig';

interface TaskResult {
  url: string;
  dataType: string;
  documentType: string;
  requirement: string;
  
  wordCount: number;
  payment: number;
  completedAt: string;
}

export default function DataScrapingTask() {
  const router = useRouter();
  const [showSummary, setShowSummary] = useState(false);
  const [taskResult, setTaskResult] = useState<TaskResult | null>(null);
  const [formData, setFormData] = useState({
    url: '',
    dataType: 'Public Policy',
    documentType: 'PDF Scraping Data',
    requirement: ''
  });

  const submitCustomTask = () => {
    if (!formData.url) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å URL');
      return;
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥ (‡∏™‡∏°‡∏°‡∏ï‡∏¥ 5,000 ‡∏Ñ‡∏≥ = 1 ‡∏ö‡∏≤‡∏ó)
    const estimatedWords = 5000; // ‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
    const payment = Math.ceil(estimatedWords / 5000);
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ
    setTaskResult({
      url: formData.url,
      dataType: formData.dataType,
      documentType: formData.documentType,
      requirement: formData.requirement,
      wordCount: estimatedWords,
      payment: payment,
      completedAt: new Date().toLocaleString('th-TH')
    });
    setShowSummary(true);
  };

  const resetForm = () => {
    setShowSummary(false);
    setTaskResult(null);
    setFormData({ url: '', dataType: 'Public Policy', documentType: 'PDF Scraping Data', requirement: '' });
  };

  // ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏á‡∏≤‡∏ô
  if (showSummary && taskResult) {
    return (
      <div className={`min-h-screen ${gradients.backgroundLight}`}>
        {/* Header */}
        <header className={components.header.container}>
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <button 
                onClick={resetForm}
                className={components.iconContainer.secondary}
              >
                <ArrowLeft className="w-5 h-5 text-green-600" />
              </button>
              <div>
                <h1 className={typography.h2}>‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏á‡∏≤‡∏ô</h1>
                <p className={typography.caption}>‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
              </div>
            </div>
          </div>
        </header>

        <div className="px-4 py-6">
          {/* Success Banner */}
          <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-6 text-center">
            <div className="text-6xl mb-4">üéâ</div>
            <h2 className="text-2xl font-bold text-green-800 mb-2">‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!</h2>
            <p className="text-green-700">‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß</p>
          </div>

          {/* Payment Summary */}
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô</h3>
            
            <div className="bg-green-50 rounded-lg p-4 mb-4">
              <div className="flex justify-between items-center mb-2">
                <span className="text-green-700">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ:</span>
                <span className="font-bold text-green-800">{taskResult.wordCount.toLocaleString()} ‡∏Ñ‡∏≥</span>
              </div>
              <div className="flex justify-between items-center mb-2">
                <span className="text-green-700">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢:</span>
                <span className="text-green-800">5,000 ‡∏Ñ‡∏≥ = 1 ‡∏ö‡∏≤‡∏ó</span>
              </div>
              <hr className="my-2 border-green-200" />
              <div className="flex justify-between items-center">
                <span className="text-lg font-medium text-green-700">‡∏Ñ‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏£‡∏ß‡∏°:</span>
                <span className="text-2xl font-bold text-green-800">‡∏ø{taskResult.payment} ‡∏ö‡∏≤‡∏ó</span>
              </div>
            </div>
          </div>

          {/* Task Details */}
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</h3>
            
            <div className="space-y-3">
              <div className="flex justify-between">
                <span className="text-gray-600">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</span>
                <span className="font-medium">{taskResult.dataType}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</span>
                <span className="font-medium">{taskResult.documentType}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</span>
                <span className="font-medium text-blue-600 truncate max-w-48">{taskResult.url}</span>
              </div>
              <div>
                <span className="text-gray-600">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô:</span>
                <p className="mt-1 text-gray-800 bg-gray-50 p-3 rounded">{taskResult.requirement || '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏'}</p>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô:</span>
                <span className="font-medium">{taskResult.completedAt}</span>
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="space-y-3">
            <button 
              onClick={resetForm}
              className="w-full bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-4 rounded-md transition-colors"
            >
              ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
            </button>
            <button 
              className="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-4 rounded-md transition-colors"
              onClick={() => router.push('/mobile/labeler/tasks')}
            >
              ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className={`min-h-screen ${gradients.backgroundLight}`}>
      {/* Header */}
      <header className={components.header.container}>
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <button 
              onClick={() => router.back()}
              className={components.iconContainer.secondary}
            >
              <ArrowLeft className="w-5 h-5 text-green-600" />
            </button>
            <div>
              <h1 className={typography.h2}>‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</h1>
              <p className={typography.caption}>‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
            </div>
          </div>
        </div>
      </header>

      <div className="px-4 py-6">
        {/* Instructions */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
          <h3 className="font-semibold text-blue-900 mb-3">üìã ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h3>
          <div className="text-blue-800 text-sm space-y-2">
            <p><strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:</strong> ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏≤‡∏Å URL ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
            
            <div className="mt-3">
              <p className="font-medium mb-2">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</p>
              <ul className="space-y-1 ml-4">
                <li><strong>‚Ä¢ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ:</strong> ‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏ó‡∏Ñ, ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå, ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°</li>
                <li><strong>‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß:</strong> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß, ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ö‡∏¥‡∏ô, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß</li>
                <li><strong>‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤:</strong> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£, ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢, ‡∏™‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</li>
                <li><strong>‚Ä¢ ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞:</strong> ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡∏£‡∏±‡∏ê, ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢, ‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞</li>
              </ul>
            </div>
            
            <div className="mt-3">
              <p className="font-medium mb-2">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</p>
              <ul className="space-y-1 ml-4">
                <li><strong>‚Ä¢ Web Scraping:</strong> ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á</li>
                <li><strong>‚Ä¢ Youtube:</strong> ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô, ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</li>
                <li><strong>‚Ä¢ PDF:</strong> ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ PDF</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Simple Task Form */}
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-6">‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</h2>
          
          {/* Category */}
          <div className="mb-6">
            <label className="block text-gray-700 font-medium mb-2">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</label>
            <select 
              value={formData.dataType}
              onChange={(e) => setFormData(prev => ({ ...prev, dataType: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-black"
            >
              <option value="Technologies">‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ</option>
              <option value="Travel">‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß</option>
              <option value="Education">‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option>
              <option value="Public Policy">‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞</option>
            </select>
          </div>

          {/* Type */}
          <div className="mb-6">
            <label className="block text-gray-700 font-medium mb-2">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</label>
            <select 
              value={formData.documentType}
              onChange={(e) => setFormData(prev => ({ ...prev, documentType: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-black"
            >
              <option value="WebScraping Data">Web Scraping</option>
              <option value="Youtube Scraping Data">Youtube</option>
              <option value="PDF Scraping Data">‡∏û‡∏µ‡∏î‡∏µ‡πÄ‡∏≠‡∏ü</option>
            </select>
          </div>

          {/* Source URL */}
          <div className="mb-6">
            <label className="block text-gray-700 font-medium mb-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•/‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</label>
            <textarea
              value={formData.url}
              onChange={(e) => setFormData(prev => ({ ...prev, url: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-black"
              placeholder="https://example.com"
            />
          </div>

         

          {/* Submit Button */}
          <button 
            onClick={submitCustomTask}
            className="w-full bg-gray-600 hover:bg-gray-700 text-white font-medium py-3 px-4 rounded-md transition-colors"
          >
            ‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô
          </button>
        </div>
      </div>
    </div>
  );
}